{
    "pipes": [],
    "interfaces": [
        {
            "name": "EvolutionChain",
            "id": "interface-EvolutionChain-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "chain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Pokemon",
            "id": "interface-Pokemon-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "abilities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokemonAbility[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "sprites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "stats",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokemonStat[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonAbility",
            "id": "interface-PokemonAbility-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "ability",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "is_hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "slot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonSpecies",
            "id": "interface-PokemonSpecies-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "egg_groups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "evolution_chain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "flavor_text_entries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonStat",
            "id": "interface-PokemonStat-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "base_stat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "effort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "stat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonType",
            "id": "interface-PokemonType-4c349b4d181af37aa2c249a616407a45b3e209d912cbc25e18db5fcb53a4839cc4bb59b3a1566ff3849600d50188a3ef4b91dfeeaf26c7b84b57444ed080cd9c",
            "file": "src/app/core/models/pokemon.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonType {\n  type: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface PokemonAbility {\n  ability: {\n    name: string;\n    url: string;\n  };\n  is_hidden: boolean;\n  slot: number;\n}\n\nexport interface PokemonStat {\n  base_stat: number;\n  effort: number;\n  stat: {\n    name: string;\n    url: string;\n  };\n}\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: {\n    type: {\n      name: string;\n    }\n  }[];\n  abilities: PokemonAbility[];\n  stats: PokemonStat[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      'official-artwork': {\n        front_default: string;\n      };\n    };\n  };\n}\n\nexport interface PokemonSpecies {\n  egg_groups: {\n    name: string;\n    url: string;\n  }[];\n  flavor_text_entries: {\n    flavor_text: string;\n    language: {\n      name: string;\n      url: string;\n    };\n  }[];\n  evolution_chain: {\n    url: string;\n  };\n}\n\nexport interface EvolutionChain {\n  chain: {\n    species: {\n      name: string;\n      url: string;\n    };\n    evolves_to: Array<{\n      species: {\n        name: string;\n        url: string;\n      };\n      evolves_to: Array<{\n        species: {\n          name: string;\n          url: string;\n        };\n      }>;\n    }>;\n  };\n} ",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonTypeColor",
            "id": "interface-PokemonTypeColor-d85e21f864c4e9c62258e893e3a82f32ac7ee2c6c766cfaad3f2de53ec90d2a7b552f8b3c25d5d9c510cbccd9f375309daa529bd074647419e9216e15cbcbae7",
            "file": "src/app/core/constants/pokemon-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonTypeColor {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypeInfo {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypes {\n  [key: string]: PokemonTypeInfo;\n}\n\nexport const POKEMON_TYPE: Readonly<PokemonTypes> = {\n  normal: { color: '#A8A878', hex: '#A8A878' },\n  fighting: { color: '#C03028', hex: '#C03028' },\n  flying: { color: '#A890F0', hex: '#A890F0' },\n  poison: { color: '#A040A0', hex: '#A040A0' },\n  ground: { color: '#E0C068', hex: '#E0C068' },\n  rock: { color: '#B8A038', hex: '#B8A038' },\n  bug: { color: '#A8B820', hex: '#A8B820' },\n  ghost: { color: '#705898', hex: '#705898' },\n  steel: { color: '#B8B8D0', hex: '#B8B8D0' },\n  fire: { color: '#F08030', hex: '#F08030' },\n  water: { color: '#6890F0', hex: '#6890F0' },\n  grass: { color: '#78C850', hex: '#78C850' },\n  electric: { color: '#F8D030', hex: '#F8D030' },\n  psychic: { color: '#F85888', hex: '#F85888' },\n  ice: { color: '#98D8D8', hex: '#98D8D8' },\n  dragon: { color: '#7038F8', hex: '#7038F8' },\n  dark: { color: '#705848', hex: '#705848' },\n  fairy: { color: '#EE99AC', hex: '#EE99AC' },\n  unknown: { color: '#68A090', hex: '#68A090' },\n  shadow: { color: '#705898', hex: '#705898' }\n};\n\nexport function getPokcolor(type: string): string {\n  return POKEMON_TYPE[type.toLowerCase()]?.color || POKEMON_TYPE['unknown'].color;\n}\n\nexport function getBackground(pokemonTypes: any[]): string {\n  let color = \"\";\n  if (pokemonTypes.length) {\n    const pokemontype1 = pokemonTypes[0].type.name;\n    if (pokemonTypes.length > 1) {\n      const pokemontype2 = pokemonTypes[1].type.name;\n      color = `linear-gradient(180deg, ${getPokcolor(pokemontype1)} 0%, ${getPokcolor(pokemontype2)} 100%)`;\n    } else {\n      color = getPokcolor(pokemontype1);\n    }\n  }\n  return color;\n}\n\nexport function getPokemonDescription(data: any[] = []): string {\n  if (data.length) {\n    let uniqueTextArray: string[] = [];\n    return data.reduce((acc, next) => {\n      if (next.language.name === \"en\" && !uniqueTextArray.includes(next.flavor_text)) {\n        uniqueTextArray.push(next.flavor_text);\n        return acc += next.flavor_text.replace(/\\n|\\f/g, \" \");\n      }\n      return acc;\n    }, \"\");\n  }\n  return \"\";\n}\n\nexport function getCamleCaseString(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n} ",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "hex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonTypeInfo",
            "id": "interface-PokemonTypeInfo-d85e21f864c4e9c62258e893e3a82f32ac7ee2c6c766cfaad3f2de53ec90d2a7b552f8b3c25d5d9c510cbccd9f375309daa529bd074647419e9216e15cbcbae7",
            "file": "src/app/core/constants/pokemon-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonTypeColor {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypeInfo {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypes {\n  [key: string]: PokemonTypeInfo;\n}\n\nexport const POKEMON_TYPE: Readonly<PokemonTypes> = {\n  normal: { color: '#A8A878', hex: '#A8A878' },\n  fighting: { color: '#C03028', hex: '#C03028' },\n  flying: { color: '#A890F0', hex: '#A890F0' },\n  poison: { color: '#A040A0', hex: '#A040A0' },\n  ground: { color: '#E0C068', hex: '#E0C068' },\n  rock: { color: '#B8A038', hex: '#B8A038' },\n  bug: { color: '#A8B820', hex: '#A8B820' },\n  ghost: { color: '#705898', hex: '#705898' },\n  steel: { color: '#B8B8D0', hex: '#B8B8D0' },\n  fire: { color: '#F08030', hex: '#F08030' },\n  water: { color: '#6890F0', hex: '#6890F0' },\n  grass: { color: '#78C850', hex: '#78C850' },\n  electric: { color: '#F8D030', hex: '#F8D030' },\n  psychic: { color: '#F85888', hex: '#F85888' },\n  ice: { color: '#98D8D8', hex: '#98D8D8' },\n  dragon: { color: '#7038F8', hex: '#7038F8' },\n  dark: { color: '#705848', hex: '#705848' },\n  fairy: { color: '#EE99AC', hex: '#EE99AC' },\n  unknown: { color: '#68A090', hex: '#68A090' },\n  shadow: { color: '#705898', hex: '#705898' }\n};\n\nexport function getPokcolor(type: string): string {\n  return POKEMON_TYPE[type.toLowerCase()]?.color || POKEMON_TYPE['unknown'].color;\n}\n\nexport function getBackground(pokemonTypes: any[]): string {\n  let color = \"\";\n  if (pokemonTypes.length) {\n    const pokemontype1 = pokemonTypes[0].type.name;\n    if (pokemonTypes.length > 1) {\n      const pokemontype2 = pokemonTypes[1].type.name;\n      color = `linear-gradient(180deg, ${getPokcolor(pokemontype1)} 0%, ${getPokcolor(pokemontype2)} 100%)`;\n    } else {\n      color = getPokcolor(pokemontype1);\n    }\n  }\n  return color;\n}\n\nexport function getPokemonDescription(data: any[] = []): string {\n  if (data.length) {\n    let uniqueTextArray: string[] = [];\n    return data.reduce((acc, next) => {\n      if (next.language.name === \"en\" && !uniqueTextArray.includes(next.flavor_text)) {\n        uniqueTextArray.push(next.flavor_text);\n        return acc += next.flavor_text.replace(/\\n|\\f/g, \" \");\n      }\n      return acc;\n    }, \"\");\n  }\n  return \"\";\n}\n\nexport function getCamleCaseString(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n} ",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "hex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PokemonTypes",
            "id": "interface-PokemonTypes-d85e21f864c4e9c62258e893e3a82f32ac7ee2c6c766cfaad3f2de53ec90d2a7b552f8b3c25d5d9c510cbccd9f375309daa529bd074647419e9216e15cbcbae7",
            "file": "src/app/core/constants/pokemon-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonTypeColor {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypeInfo {\n  color: string;\n  hex: string;\n}\n\ninterface PokemonTypes {\n  [key: string]: PokemonTypeInfo;\n}\n\nexport const POKEMON_TYPE: Readonly<PokemonTypes> = {\n  normal: { color: '#A8A878', hex: '#A8A878' },\n  fighting: { color: '#C03028', hex: '#C03028' },\n  flying: { color: '#A890F0', hex: '#A890F0' },\n  poison: { color: '#A040A0', hex: '#A040A0' },\n  ground: { color: '#E0C068', hex: '#E0C068' },\n  rock: { color: '#B8A038', hex: '#B8A038' },\n  bug: { color: '#A8B820', hex: '#A8B820' },\n  ghost: { color: '#705898', hex: '#705898' },\n  steel: { color: '#B8B8D0', hex: '#B8B8D0' },\n  fire: { color: '#F08030', hex: '#F08030' },\n  water: { color: '#6890F0', hex: '#6890F0' },\n  grass: { color: '#78C850', hex: '#78C850' },\n  electric: { color: '#F8D030', hex: '#F8D030' },\n  psychic: { color: '#F85888', hex: '#F85888' },\n  ice: { color: '#98D8D8', hex: '#98D8D8' },\n  dragon: { color: '#7038F8', hex: '#7038F8' },\n  dark: { color: '#705848', hex: '#705848' },\n  fairy: { color: '#EE99AC', hex: '#EE99AC' },\n  unknown: { color: '#68A090', hex: '#68A090' },\n  shadow: { color: '#705898', hex: '#705898' }\n};\n\nexport function getPokcolor(type: string): string {\n  return POKEMON_TYPE[type.toLowerCase()]?.color || POKEMON_TYPE['unknown'].color;\n}\n\nexport function getBackground(pokemonTypes: any[]): string {\n  let color = \"\";\n  if (pokemonTypes.length) {\n    const pokemontype1 = pokemonTypes[0].type.name;\n    if (pokemonTypes.length > 1) {\n      const pokemontype2 = pokemonTypes[1].type.name;\n      color = `linear-gradient(180deg, ${getPokcolor(pokemontype1)} 0%, ${getPokcolor(pokemontype2)} 100%)`;\n    } else {\n      color = getPokcolor(pokemontype1);\n    }\n  }\n  return color;\n}\n\nexport function getPokemonDescription(data: any[] = []): string {\n  if (data.length) {\n    let uniqueTextArray: string[] = [];\n    return data.reduce((acc, next) => {\n      if (next.language.name === \"en\" && !uniqueTextArray.includes(next.flavor_text)) {\n        uniqueTextArray.push(next.flavor_text);\n        return acc += next.flavor_text.replace(/\\n|\\f/g, \" \");\n      }\n      return acc;\n    }, \"\");\n  }\n  return \"\";\n}\n\nexport function getCamleCaseString(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n} ",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-d85e21f864c4e9c62258e893e3a82f32ac7ee2c6c766cfaad3f2de53ec90d2a7b552f8b3c25d5d9c510cbccd9f375309daa529bd074647419e9216e15cbcbae7",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "PokemonTypeInfo",
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "PokemonService",
            "id": "injectable-PokemonService-8e8cb81f39c8a229c2fb3ecef32ef9a59d9045531f0ff8fabadb2c5e1311879a70f62f400ac5e5663017868747c60c0fb8edd5779b5b21dc3ad33529cb69bfb3",
            "file": "src/app/core/services/pokemon.service.ts",
            "properties": [
                {
                    "name": "allPokemonsList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "allPokemonURL",
                    "defaultValue": "`${API_URLS.baseURL}/pokemon?limit=1100`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filteredPokemonList",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filteredPokemonList$",
                    "defaultValue": "this.filteredPokemonList.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "initialURL",
                    "defaultValue": "`${API_URLS.baseURL}/pokemon?limit=${API_URLS.LIMIT}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.loadingSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loadingSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadMoreInProgress$",
                    "defaultValue": "this.loadMoreInProgressSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loadMoreInProgressSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nextUrl",
                    "defaultValue": "this.initialURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemonList$",
                    "defaultValue": "this.pokemonListSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pokemonListSubject",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "extractEvolutionChain",
                    "args": [
                        {
                            "name": "chain",
                            "type": "EvolutionChain",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "chain",
                            "type": "EvolutionChain",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterBySearch",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterByTypes",
                    "args": [
                        {
                            "name": "typeUrls",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "typeUrls",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllParallelCall",
                    "args": [
                        {
                            "name": "ApiUrls",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ApiUrls",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllPokemonDataList",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getEvolutionChain",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<EvolutionChain>",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonData",
                    "args": [
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isReset",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonDataById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonDetailsListByUrl",
                    "args": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonEvolutionChain",
                    "args": [
                        {
                            "name": "speciesData",
                            "type": "PokemonSpecies",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Pokemon[]>",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "speciesData",
                            "type": "PokemonSpecies",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonTypes",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemonTypesById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSpeciesDataById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "numberFormation",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeDuplicateBy",
                    "args": [
                        {
                            "name": "arr",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "prop",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "arr",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prop",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFilteredPokemonList",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transformTypeData",
                    "args": [
                        {
                            "name": "types",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "types",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\nimport { API_URLS } from '../constants/api-urls';\nimport { getCamleCaseString } from '../constants/pokemon-types';\nimport { EvolutionChain, PokemonSpecies, Pokemon } from '../models/pokemon.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonService {\n  private initialURL = `${API_URLS.baseURL}/pokemon?limit=${API_URLS.LIMIT}`;\n  private allPokemonURL = `${API_URLS.baseURL}/pokemon?limit=1100`;\n  \n  private pokemonListSubject = new BehaviorSubject<any[]>([]);\n  private loadingSubject = new BehaviorSubject<boolean>(true);\n  private loadMoreInProgressSubject = new BehaviorSubject<boolean>(false);\n  private filteredPokemonList = new BehaviorSubject<any[]>([]);\n\n  pokemonList$ = this.pokemonListSubject.asObservable();\n  loading$ = this.loadingSubject.asObservable();\n  loadMoreInProgress$ = this.loadMoreInProgressSubject.asObservable();\n  filteredPokemonList$ = this.filteredPokemonList.asObservable();\n\n  private nextUrl: string = this.initialURL;\n\n  allPokemonsList: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getPokemonData(isReset: boolean = false): Observable<any> {\n    if (isReset) {\n      this.nextUrl = this.initialURL;\n      this.pokemonListSubject.next([]);\n    }\n    \n    if (!this.nextUrl) {\n      return of([]);\n    }\n\n    this.loadMoreInProgressSubject.next(true);\n    \n    return this.http.get(this.nextUrl).pipe(\n      switchMap((response: any) => {\n        this.nextUrl = response.next;\n        return this.getPokemonDetailsListByUrl(response.results);\n      }),\n      tap(pokemonsList => {\n        const currentList = isReset ? [] : this.pokemonListSubject.value;\n        this.pokemonListSubject.next([...currentList, ...pokemonsList]);\n        this.loadMoreInProgressSubject.next(false);\n      })\n    );\n  }\n\n  getPokemonDetailsListByUrl(results: any[]): Observable<any[]> {\n    if (!results?.length) {\n      return of([]);\n    }\n    \n    const observables = results.map(pokemon => \n      this.http.get<any>(pokemon.url).pipe(\n        catchError(error => {\n          console.error(`Error fetching pokemon ${pokemon.name}:`, error);\n          return of(null);\n        })\n      )\n    );\n    \n    return forkJoin(observables).pipe(\n      map(pokemons => pokemons.filter(pokemon => pokemon !== null))\n    );\n  }\n\n  getAllPokemonDataList(): Observable<any> {\n    return this.http.get(this.allPokemonURL);\n  }\n\n  getSpeciesDataById(id: number): Observable<any> {\n    return this.http.get(`${API_URLS.baseURL}/pokemon-species/${id}/`);\n  }\n\n  getPokemonTypesById(id: number): Observable<any> {\n    return this.http.get(`${API_URLS.baseURL}/type/${id}/`);\n  }\n\n  getPokemonTypes(): Observable<any> {\n    return this.http.get(`${API_URLS.baseURL}/type`);\n  }\n\n  getPokemonDataById(id: number): Observable<any> {\n    return this.http.get(`${API_URLS.baseURL}/pokemon/${id}/`);\n  }\n\n  numberFormation(number: number): string {\n    let result = number.toString();\n    if (number < 10) result = `00${number}`;\n    if (number > 10 && number < 100) result = `0${number}`;\n    return result;\n  }\n\n  getAllParallelCall(ApiUrls: string[]): Observable<any[]> {\n    const observables = ApiUrls.map(url => this.http.get(url));\n    return forkJoin(observables);\n  }\n  removeDuplicateBy(arr: any[], prop: string): any[] {\n    return Array.from(new Map(arr.map((m) => [m[prop], m])).values());\n  }\n\n  setLoading(loading: boolean): void {\n    this.loadingSubject.next(loading);\n  }\n\n  filterBySearch(searchTerm: string): any {\n    if (!searchTerm.trim()) {\n      this.filteredPokemonList.next([]);\n      return;\n    }\n\n    const filtered = this.allPokemonsList\n      .filter(pokemon => \n        pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    if (filtered.length > API_URLS.SEARCH_SLICED) {\n      filtered.length = API_URLS.SEARCH_SLICED;\n    }\n\n    this.getPokemonDetailsListByUrl(filtered)\n      .subscribe(pokemonList => {\n        this.filteredPokemonList.next(pokemonList);\n      });\n  }\n\n  filterByTypes(typeUrls: string[]): Observable<any[]> {\n    if (!typeUrls.length) {\n      this.filteredPokemonList.next([]);\n      return of([]);\n    }\n\n    this.setLoading(true);\n\n    return this.getAllParallelCall(typeUrls).pipe(\n      map(responses => {\n        let pokemonList = responses\n          .map(res => res.pokemon)\n          .flat()\n          .map(item => item.pokemon);\n        pokemonList = this.removeDuplicateBy(pokemonList, 'name');\n        return pokemonList;\n      }),\n      switchMap(pokemonList => this.getPokemonDetailsListByUrl(pokemonList)),\n      tap(pokemonList => {\n        this.setFilteredPokemonList(pokemonList);\n        this.setLoading(false);\n      }),\n      catchError(error => {\n        console.error('Error filtering by types:', error);\n        this.setLoading(false);\n        return of([]);\n      })\n    );\n  }\n\n  transformTypeData(types: any[]): any[] {\n    return types.map(item => ({\n      label: getCamleCaseString(item.name),\n      value: item.url,\n      url: item.url\n    }));\n  }\n\n  getEvolutionChain(url: string): Observable<EvolutionChain> {\n    return this.http.get<EvolutionChain>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching evolution chain:', error);\n        return of({ chain: { species: { name: '', url: '' }, evolves_to: [] } });\n      })\n    );\n  }\n\n  getPokemonEvolutionChain(speciesData: PokemonSpecies): Observable<Pokemon[]> {\n    return this.getEvolutionChain(speciesData.evolution_chain.url).pipe(\n      map(chain => this.extractEvolutionChain(chain)),\n      switchMap(pokemonNames => {\n        const pokemonRequests = pokemonNames.map(name => \n          this.http.get<Pokemon>(`${API_URLS.baseURL}/pokemon/${name}`)\n        );\n        return forkJoin(pokemonRequests);\n      }),\n      catchError(error => {\n        console.error('Error fetching pokemon evolution chain:', error);\n        return of([]);\n      })\n    );\n  }\n\n  private extractEvolutionChain(chain: EvolutionChain): string[] {\n    const pokemonNames: string[] = [];\n    \n    const extractNames = (node: any) => {\n      if (node.species) {\n        pokemonNames.push(node.species.name);\n      }\n      if (node.evolves_to && node.evolves_to.length > 0) {\n        node.evolves_to.forEach((evolution: any) => {\n          extractNames(evolution);\n        });\n      }\n    };\n\n    extractNames(chain.chain);\n    return pokemonNames;\n  }\n\n  setFilteredPokemonList(data: any[]): void {\n    this.filteredPokemonList.next(data);\n  }\n} ",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-78a1d7d1224b26ad8f19a785c629d936b9061c4ea027af911850ed218b2519fb665f64b716f00de821b2b0c990359b08dd55b9b914cc80f86126901267c6c11c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'pokedex'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pokedex';\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Styles for app component if needed ",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet></router-outlet> "
        },
        {
            "name": "ColorfulTagComponent",
            "id": "component-ColorfulTagComponent-009afd1c0de3ab1cb0e7e979bbdfe7563c28996a8946b1887190dfdf1190c204d6fca295192f2302eebcd06c8f41d9f802503fddb8ee1a483efa4efce69a7372",
            "file": "src/app/shared/atoms/colorful-tag/colorful-tag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colorful-tag",
            "styleUrls": [
                "./colorful-tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colorful-tag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getPokemonColor",
                    "defaultValue": "getPokcolor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { getPokcolor } from '../../../core/constants/pokemon-types';\n\n@Component({\n  selector: 'app-colorful-tag',\n  templateUrl: './colorful-tag.component.html',\n  styleUrls: ['./colorful-tag.component.scss']\n})\nexport class ColorfulTagComponent {\n  @Input() text = '';\n  @Input() className = '';\n  @Input() type: string = '';\n\n  getPokemonColor = getPokcolor;\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"src/styles/variables\" as *;\n\n.colorful-tag {\n  border: 1px solid $primary-text-color;\n  border-radius: 5px;\n  padding: 2px 5px;\n  color: $primary-text-color;\n} ",
                    "styleUrl": "./colorful-tag.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div>\n  <div [class]=\"className\">\n    <span class=\"colorful-tag\" [style.background]=\"getPokemonColor(type)\">\n      {{text}}\n    </span>\n  </div>\n</div> "
        },
        {
            "name": "DetailsHeaderComponent",
            "id": "component-DetailsHeaderComponent-d76462a5b54142c473fda5954891fe619602d31aab06784345b27926780539e7d6d5dc6d075d9d88b4cca2b6e427f7e408be2a0d34bbe4d544d70971ad10994e",
            "file": "src/app/shared/organisms/details-header/details-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-header",
            "styleUrls": [
                "./details-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "speciesData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "backClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "closeClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "forwardClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "MAX_DESCRIPTION_LENGTH",
                    "defaultValue": "363",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getDescription",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemonDescription",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { getPokemonDescription } from '../../../core/constants/pokemon-types';\nimport { Pokemon } from '../../../core/models/pokemon.types';\n\n\n@Component({\n  selector: 'app-details-header',\n  templateUrl: './details-header.component.html',\n  styleUrls: ['./details-header.component.scss']\n})\nexport class DetailsHeaderComponent {\n  @Input() pokemon!: any;\n  @Input() speciesData: any;\n  @Output() backClick = new EventEmitter<void>();\n  @Output() closeClick = new EventEmitter<void>();\n  @Output() forwardClick = new EventEmitter<void>();\n\n  readonly MAX_DESCRIPTION_LENGTH = 363;\n\n  getPokemonDescription(): any {\n    if (this.speciesData?.flavor_text_entries) {\n      return getPokemonDescription(this.speciesData.flavor_text_entries);\n    }\n    return '';\n  }\n\n  getDescription(): { text: any, hasMore: any } {\n    const fullDescription = this.getPokemonDescription();\n    return {\n      text: fullDescription.substring(0, this.MAX_DESCRIPTION_LENGTH),\n      hasMore: fullDescription.length > this.MAX_DESCRIPTION_LENGTH\n    };\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n@use \"common\" as *;\n\n.details-header {\n  padding: 2rem;\n  background-color: $bg-color;\n\n  .header-content {\n    @include flex-row(flex-start, flex-start);\n    gap: 3rem;\n\n    @include sm {\n      @include flex-col;\n      gap: 2rem;\n    }\n\n    .pokemon-card-wrap {\n      width: 300px;\n      flex-shrink: 0;\n\n      @include sm {\n        width: 100%;\n      }\n    }\n\n    .pokemon-info {\n      flex: 1;\n\n      .pokemon-name {\n        @include flex-row(center, space-between);\n        margin-bottom: 2rem;\n\n        .name-wrap {\n          h3 {\n            font-size: 2rem;\n            font-weight: 600;\n            text-transform: capitalize;\n          }\n        }\n\n        .id-wrap {\n          h3 {\n            font-size: 1.5rem;\n            color: $bg-popover;\n          }\n        }\n\n        .navigation-icons {\n          @include flex-row(center, center);\n          gap: 0.5rem;\n\n          button {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            background-color: rgba($bg-popover, 0.1);\n            transition: all 0.2s ease;\n            color: $bg-popover;\n\n            .mat-icon {\n              font-size: 20px;\n              width: 20px;\n              height: 20px;\n              line-height: 20px;\n            }\n\n            &:hover {\n              background-color: rgba($bg-popover, 0.2);\n              transform: translateY(-1px);\n            }\n\n            &:active {\n              transform: translateY(0);\n            }\n          }\n        }\n      }\n\n      .pokemon-description {\n        font-size: 1.1rem;\n        line-height: 1.6;\n        color: rgba(0, 0, 0, 0.7);\n\n        .read-more {\n          display: inline;\n          color: $bg-popover;\n          cursor: pointer;\n          margin-left: 0.5rem;\n          font-size: 18px;\n          font-weight: bold;\n          text-decoration: none;\n          transition: all 0.2s ease;\n\n          &:hover {\n            text-decoration: underline;\n            opacity: 0.8;\n          }\n        }\n      }\n    }\n  }\n}\n\n.details-header-container {\n  .header-wrap {\n    @include flex-row(flex-start, flex-start);\n    display: flex;\n    align-items: flex-start;\n    \n    @include sm {\n      @include flex-col(center, center);\n    }\n  }\n\n  .header-sub-wrap {\n    @include flex-col(flex-start, space-between);\n    width: 100%;\n  }\n\n  .text-description {\n    padding-top: 30px;\n    font-size: 18px;\n  }\n\n  .title-wrap {\n    @include flex-row(center, space-between);\n    width: 100%;\n  }\n\n  .text-dot {\n    display: inline;\n  }\n\n  .load-more {\n    display: inline;\n    font-size: 18px;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  .icon-wrap {\n    @include flex-row(center, space-between);\n\n    img {\n      width: 38px;\n      height: 38px;\n      padding: 6px;\n      cursor: pointer;\n    }\n  }\n} ",
                    "styleUrl": "./details-header.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"details-header\">\n  <div class=\"header-content\">\n    <div class=\"pokemon-card-wrap\">\n      <app-pokemon-card [data]=\"pokemon\" className=\"disabled-click\"></app-pokemon-card>\n    </div>\n    <div class=\"pokemon-info\">\n      <div class=\"pokemon-name\">\n        <div class=\"name-wrap\">\n          <h3 class=\"text-caps\">{{pokemon.name}}</h3>\n        </div>\n        <div class=\"id-wrap\">\n          <h3>{{pokemon.id | number:'3.0-0'}}</h3>\n        </div>\n        <div class=\"navigation-icons\">\n          <button mat-icon-button (click)=\"backClick.emit()\" matTooltip=\"Previous Pokemon\">\n            <mat-icon>chevron_left</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"closeClick.emit()\" matTooltip=\"Close\">\n            <mat-icon>close</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"forwardClick.emit()\" matTooltip=\"Next Pokemon\">\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div class=\"pokemon-description\">\n        <p>{{getDescription().text}}</p>\n        <span *ngIf=\"getDescription().hasMore\" \n              class=\"read-more\" \n              [matTooltip]=\"getPokemonDescription()\"\n              matTooltipPosition=\"below\">\n          read more\n        </span>\n      </div>\n    </div>\n  </div>\n</div> "
        },
        {
            "name": "EvolutionChainCardComponent",
            "id": "component-EvolutionChainCardComponent-762d1f2f318fb8dcaf973c854ed3d67d18acdb69adc6409844963b49972a4b8e35157460d94686c43606f9899e73235dda24f9d0012081500fa023e2bc0602c0",
            "file": "src/app/shared/molecules/evolution-chain-card/evolution-chain-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-evolution-chain-card",
            "styleUrls": [
                "./evolution-chain-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./evolution-chain-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "evolutionChain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Pokemon } from '../../../core/models/pokemon.types';\n\n@Component({\n  selector: 'app-evolution-chain-card',\n  templateUrl: './evolution-chain-card.component.html',\n  styleUrls: ['./evolution-chain-card.component.scss']\n})\nexport class EvolutionChainCardComponent {\n  @Input() evolutionChain!:any;\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"src/styles/variables\" as *;\n@use 'common' as *;\n\n.evol-container {\n  .evol-wrap {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .evol-card-wrap {\n    height: max-content;\n  }\n\n  .evolu-break {\n    overflow: auto;\n  }\n\n  .evol-next-arrow {\n    padding: 20px;\n    img {\n      width: 22px;\n      height: 22px;\n    }\n  }\n\n  .flex-row {\n    display: flex;\n    align-items: center;\n\n    @include sm {\n      flex-direction: column;\n    }\n  }\n}\n\n.evolution-chain-card {\n  background: white;\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n  .evolution-chain {\n    @include flex-row(center, space-between);\n\n    @include sm {\n      @include flex-col(center, center);\n      gap: 2rem;\n    }\n\n    .pokemon-evolution {\n      @include flex-col(center, center);\n      gap: 1rem;\n      text-align: center;\n\n      img {\n        width: 120px;\n        height: 120px;\n        object-fit: contain;\n      }\n\n      .name {\n        font-size: 1.1rem;\n        font-weight: 500;\n      }\n    }\n\n    .evolution-arrow {\n      font-size: 2rem;\n      color: #666;\n\n      @include sm {\n        transform: rotate(90deg);\n      }\n    }\n  }\n} ",
                    "styleUrl": "./evolution-chain-card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"evolution-chain-card\">\n  <h3>Evolution Chain</h3>\n  <div class=\"evolution-chain\">\n    <ng-container *ngFor=\"let pokemon of evolutionChain; let last = last\">\n      <div class=\"pokemon-evolution\">\n        <img [src]=\"pokemon.sprites.other['official-artwork'].front_default\" [alt]=\"pokemon.name\">\n        <span class=\"name\">{{pokemon.name | titlecase}}</span>\n      </div>\n      <span class=\"evolution-arrow\" *ngIf=\"!last\">→</span>\n    </ng-container>\n  </div>\n</div> "
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-a86ef157baaeec763fb3b410a2d0c3ab00ba65c15d3fbc34dc0d4375a6c25e3e75a72c43182aa5c3cb3af9108fdf83479dc38422330c5f089928c57c58dc5ab3",
            "file": "src/app/shared/organisms/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "filterEnabled",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isFilterEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isTypeFilterOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pokemonTypes$",
                    "defaultValue": "this.pokemonService.getPokemonTypes().pipe(\n    map(response => this.pokemonService.transformTypeData(response.results))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SEARCH_SLICED",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "searchSubject",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTypeChange",
                    "args": [
                        {
                            "name": "values",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTypeFilterClose",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTypeFilterOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performSearch",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\nimport { Observable,  Subject, Subscription } from 'rxjs';\nimport { PokemonService } from '../../../core/services/pokemon.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit, OnDestroy {\n  @Output() filterEnabled = new EventEmitter<any>();\n\n  private searchSubject = new Subject<any>();\n  private searchSubscription: Subscription;\n\n  isTypeFilterOpen = false;\n  \n  pokemonTypes$: any = this.pokemonService.getPokemonTypes().pipe(\n    map(response => this.pokemonService.transformTypeData(response.results))\n  );\n\n  isFilterEnabled = false;\n  SEARCH_SLICED = 20;\n\n  constructor(private pokemonService: PokemonService) {\n    // Setup the debounced search\n    this.searchSubscription = this.searchSubject.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe(searchTerm => {\n      this.performSearch(searchTerm);\n    });\n  }\n\n  ngOnInit(): void {\n    // Get all pokemon list at initialization\n    this.pokemonService.getAllPokemonDataList().subscribe(\n      (data: any) => {\n        this.pokemonService.allPokemonsList = data.results;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  onSearchChange(value: any): void {\n    const trimmedValue = value.trim().toLowerCase();\n    this.searchSubject.next(trimmedValue); // Emit the search term to the subject\n  }\n\n  private performSearch(value: any): void {\n    this.pokemonService.setLoading(true); // Set loading to true when search starts\n    if (value.length) {\n      this.isFilterEnabled = true;\n      this.filterEnabled.emit(true);\n      \n      // Filter the allPokemonsList\n      const filteredList = this.pokemonService.allPokemonsList.filter(pokemon => \n        pokemon.name.toLowerCase().includes(value)\n      );\n\n      if (filteredList.length > this.SEARCH_SLICED) {\n        filteredList.length = this.SEARCH_SLICED;\n      }\n\n      // Get detailed data for filtered pokemon\n      this.pokemonService.getPokemonDetailsListByUrl(filteredList)\n        .subscribe(detailedList => {\n          this.pokemonService.setFilteredPokemonList(detailedList);\n          this.pokemonService.setLoading(false); // Set loading to false after data is fetched\n        });\n    } else {\n      this.filterEnabled.emit(false);\n      this.pokemonService.setFilteredPokemonList([]);\n      this.pokemonService.getPokemonData(true).subscribe(() => {\n        this.pokemonService.setLoading(false); // Set loading to false after data is fetched\n      });\n    }\n  }\n\n  onTypeChange(values: any): any {\n    this.pokemonService.setLoading(true); // Set loading to true when filter starts\n    if (values.length) {\n      this.filterEnabled.emit(true);\n      this.pokemonService.filterByTypes(values).subscribe(() => {\n        this.pokemonService.setLoading(false); // Set loading to false after data is fetched\n      });\n    } else {\n      this.filterEnabled.emit(false);\n      this.pokemonService.getPokemonData(true).subscribe(() => {\n        this.pokemonService.setLoading(false); // Set loading to false after data is fetched\n      });\n    }\n  }\n\n  onTypeFilterOpen(): any {\n    this.isTypeFilterOpen = true;\n  }\n\n  onTypeFilterClose(): any {\n    this.isTypeFilterOpen = false;\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'variables' as *;\n@use 'common' as *;\n\n.filter-container {\n  padding: 0;\n\n  .filter-wrap {\n    @include flex-row(flex-start, space-between);\n    padding-top: 22px;\n\n    .filter-row-wrap {\n      display: grid;\n      grid-template-columns: 3.5fr 0.5fr;\n      gap: 16px;\n      width: 100%;\n      margin: 0;\n\n      @include sm {\n        grid-template-columns: 1fr;\n        gap: 16px;\n      }\n\n      .search-col {\n        width: 100%;\n\n        .search-field {\n          width: 100%;\n\n          .field-label{\n            padding-bottom: 6px;\n          }\n          ::ng-deep {\n            .mat-form-field {\n              width: 100%;\n            }\n\n            .mat-form-field-wrapper {\n              padding: 0;\n              margin: 0;\n            }\n\n            .mat-form-field-flex {\n              background-color: $input-background;\n              border-radius: 6px;\n              height: 42px !important;\n              min-height: 42px !important;\n              padding: 0 16px;\n              transition: all 0.2s ease;\n\n              &:hover, &:focus-within {\n                background-color: $white;\n              }\n            }\n\n            .mat-form-field-infix {\n              padding: 0;\n              border-top: 0;\n              height: 42px;\n              display: flex;\n              align-items: center;\n            }\n\n            input.mat-input-element {\n              margin: 0;\n              font-size: 14px;\n              line-height: normal;\n              height: auto;\n              color: $primary-text-color;\n\n              &::placeholder {\n                color: rgba($primary-text-color, 0.7);\n              }\n            }\n\n            .mat-form-field-label {\n              color: rgba($primary-text-color, 0.7);\n              font-size: 14px;\n            }\n\n            .mat-form-field-underline {\n              display: none;\n            }\n\n            .mat-form-field-label-wrapper {\n              padding-top: 0;\n            }\n        \n            .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper {\n                padding-right: 0;\n                background-color: #C9DDE2;\n                border-radius: 10px;\n            }\n          }\n        }\n      }\n\n      .type-col {\n        width: 100%;\n        min-width: 240px;\n        max-width: 320px;\n\n        .field-label{\n            padding-bottom: 6px;\n        }\n\n        ::ng-deep {\n          .mat-form-field {\n            width: 100%;\n          }\n\n          .mat-form-field-flex {\n            background-color: $input-background;\n            border-radius: 6px;\n            height: 42px !important;\n            min-height: 42px !important;\n            padding: 0 16px;\n          }\n\n          .mat-select-value {\n            color: $primary-text-color;\n          }\n\n          .mat-select-arrow {\n            color: $primary-text-color;\n          }\n\n          .mat-form-field-underline {\n            display: none;\n          }\n        }\n      }\n    }\n  }\n}\n\n.pokemon-search-filter {\n  background-color: $input-background;\n}\n\n// Dropdown panel styles\n::ng-deep {\n  .mat-select-panel {\n    background-color: $white;\n    border-radius: 6px !important;\n    margin-top: 4px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n\n    .mat-option {\n      height: 42px;\n      line-height: 42px;\n      font-size: 14px;\n      color: $primary-text-color;\n      padding: 0 16px;\n\n      &.mat-selected:not(.mat-option-multiple) {\n        background-color: rgba($primary-text-color, 0.1);\n      }\n\n      &:hover:not(.mat-option-disabled) {\n        background-color: rgba($primary-text-color, 0.1);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"filter-container\">\n  <div class=\"filter-wrap\">\n    <div class=\"filter-row-wrap\">\n      <div class=\"search-col\">\n        <div class=\"search-field\">\n          <div class=\"field-label\">Search By</div>\n          <app-search-filter\n            placeholder=\"Search by Name\"\n            inputClass=\"pokemon-search-filter\"\n            (searchChange)=\"onSearchChange($event)\">\n          </app-search-filter>\n        </div>\n      </div>\n      \n      <div class=\"type-col\">\n        <div class=\"field-label\">Type</div>\n        <app-multi-select-dropdown\n          [placeholder]=\"'Select Types'\"\n          [data]=\"(pokemonTypes$ | async) || []\"\n          (selectionChange)=\"onTypeChange($event)\">\n        </app-multi-select-dropdown>\n      </div>\n\n    </div>\n  </div>\n</div> "
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ebae25f434f9e261de3906e51fabd092a358bfb5f46eab24b023901cefcafcff10f16752a35acbc8aacacf48e9945333f0f2752c5e5e5d85ddd839b397a5db4d",
            "file": "src/app/shared/organisms/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  @Input() children?: any;\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"src/styles/variables\" as *;\n@use \"src/styles/common\" as *;\n\n\n.header {\n  height: var(--header-height);\n  padding: 0px;\n  @include flex-row(center, start);\n  font-weight: 600;\n  z-index: 2;\n  top: 0;\n  width: 100%;\n}\n\n.header-container {\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  .header-title {\n    font-size: 1.8rem;\n    font-weight: bold;\n    color: $primary-text-color;\n    margin: 0;\n  }\n\n  .header-subtitle {\n    font-size: 1.2rem;\n    color: rgba($primary-text-color, 0.7);\n    margin: 0;\n  }\n\n  .horizontal-line {\n    width: 1px;\n    height: 32px;\n    background-color: #5D5F7E;\n    margin: 22px;\n}\n} ",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header-container\">\n  <h1 class=\"header-title\">Pokédex</h1>\n  <span class=\"horizontal-line\"></span>\n  <h2 class=\"header-subtitle\">Explore the world of Pokémon</h2>\n</div> "
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-22bd4fd08e4b0cd02d7f76f16dce65e094ee3babf41f573e46d4f3e086cec9d1e86fce4e4ee464e33144029d30460a33e3d3e1f0dc48e21916c0b53733278c2c",
            "file": "src/app/shared/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isFilterEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isLoadMoreInProgress$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "pokemonList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getDisplayList",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Pokemon[]>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleLoadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handlePokemonClick",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterEnabled",
                    "args": [
                        {
                            "name": "enabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "enabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { PokemonService } from '../../../core/services/pokemon.service';\nimport { Pokemon } from '../../../core/models/pokemon.types';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  isFilterEnabled = false;\n  pokemonList$: Observable<any>;\n  filteredList$: Observable<any>;\n  isLoading$: Observable<any>;\n  isLoadMoreInProgress$: Observable<boolean>;\n\n  constructor(\n    private pokemonService: PokemonService,\n    private router: Router\n  ) {\n    this.pokemonList$ = this.pokemonService.pokemonList$;\n    this.filteredList$ = this.pokemonService.filteredPokemonList$;\n    this.isLoading$ = this.pokemonService.loading$;\n    this.isLoadMoreInProgress$ = this.pokemonService.loadMoreInProgress$;\n  }\n\n  ngOnInit(): void {\n    // Set loading to true before fetching data\n    this.pokemonService.setLoading(true);\n    this.pokemonService.getPokemonData(true).subscribe({\n      next: () => this.pokemonService.setLoading(false),\n      error: (error) => {\n        console.error('Error loading Pokemon:', error);\n        this.pokemonService.setLoading(false);\n      }\n    });\n  }\n\n  handlePokemonClick(id: number): void {\n    this.router.navigate(['/details', id]);\n  }\n\n  handleLoadMore(): void {\n    this.pokemonService.getPokemonData().subscribe();\n  }\n\n  onFilterEnabled(enabled: boolean): void {\n    this.isFilterEnabled = enabled;\n  }\n\n  getDisplayList(): Observable<Pokemon[]> {\n    return this.isFilterEnabled ? this.filteredList$ : this.pokemonList$;\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'variables' as *;\n@use 'common' as *;\n\n.home-container {\n  padding: 32px 64px;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  max-width: 1440px; // Set maximum width\n  margin: 0 auto; \n\n  @include sm {\n    padding: 26px 22px;\n  }\n\n  .app-header-wrap {\n    display: flex;\n\n    @include sm {\n      @include flex-col(flex-start, flex-start);\n    }\n  }\n\n  .card-list {\n    margin-top: 2rem;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n    gap: 3rem;\n    padding: 3rem 0;\n    flex: 1;\n  }\n\n  .no-data-found {\n    @include flex-row;\n    height: 300px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  .header-title {\n    font-size: 32px;\n    margin-bottom: 1rem;\n    font-weight: 600;\n\n    h3 {\n      color: #333;\n      margin: 0;\n    }\n  }\n\n  .subheading {\n    font-size: 20px;\n    padding-left: 32px;\n    color: #616161;\n\n    @include sm {\n      font-size: 18px;\n      padding-left: 0px;\n    }\n  }\n\n  .header-horizontal-line {\n    width: 2px;\n    // height: 40px;\n    background-color: $line-color;\n    margin: 0 32px;\n\n    @include sm {\n      width: 100%;\n      height: 2px;\n      margin: 16px 0;\n      padding: 0;\n    }\n  }\n\n  .load-more-wrap {\n    @include flex-row;\n    margin: 3rem 0;\n    padding: 2rem;\n\n    button {\n      background-color: $bg-popover;\n      color: white;\n      border: none;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-weight: 500;\n\n      &:hover {\n        opacity: 0.9;\n        transform: translateY(-2px);\n      }\n\n      &:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n      }\n    }\n  }\n\n  .loadmore-loader {\n    @include flex-row;\n    padding: 2rem;\n  }\n}\n\n.app-loader-wrapper {\n  @include flex-row;\n  height: calc(100vh - var(--header-height));\n  padding: 3rem;\n} ",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home-container\">\n  <div>\n    <app-header>\n      <div class=\"app-header-wrap\">\n        <div class=\"header-title\">\n          <h3>Pokédex</h3>\n        </div>\n        <div class=\"header-horizontal-line\"></div>\n        <div class=\"subheading\">\n          <span>Search for any Pokémon that exists on the planet</span>\n        </div>\n      </div>\n    </app-header>\n\n    <div>\n      <app-filter (filterEnabled)=\"onFilterEnabled($event)\"></app-filter>\n    </div>\n  </div>\n\n  <!-- Show loader if loading -->\n  <div *ngIf=\"isLoading$ | async\">\n    <app-loader className=\"app-loader-wrapper\"></app-loader>\n  </div>\n\n  <!-- Show content only if not loading -->\n  <ng-container *ngIf=\"!(isLoading$ | async)\">\n    <div *ngIf=\"getDisplayList() | async as pokemonList\">\n      <div *ngIf=\"pokemonList.length > 0\" class=\"card-list\">\n        <div *ngFor=\"let pokemon of pokemonList\" class=\"responsive\">\n          <app-pokemon-card\n            [data]=\"pokemon\"\n            (cardClick)=\"handlePokemonClick(pokemon.id)\">\n          </app-pokemon-card>\n        </div>\n      </div>\n\n      <div *ngIf=\"!isFilterEnabled && pokemonList.length > 0\" class=\"load-more-wrap\">\n        <button mat-button color=\"primary\" (click)=\"handleLoadMore()\">\n          Load more\n        </button>\n      </div>\n\n      <div *ngIf=\"pokemonList.length === 0\" class=\"no-data-found\">\n        <span>No data found</span>\n      </div>\n    </div>\n  </ng-container>\n</div> "
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-241dbe06759a84e69cb1c76ba8c179a708d11d862fcb7944babd80b6f3054b54c1a9867b920d7a4edd3e3ca1a08f05115a45879d502c067fbcbee16f56206c39",
            "file": "src/app/shared/atoms/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  @Input() className?: any;\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n} ",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div [class]=\"className\">\n  <mat-spinner diameter=\"40\"></mat-spinner>\n  <span>Loading...</span>\n</div> "
        },
        {
            "name": "MultiSelectDropdownComponent",
            "id": "component-MultiSelectDropdownComponent-fad8a009ab1a66cbad26047e6863bad35f02e81be54a072b1eba6122ec1a082545b0344fa04388cb7f88d3aca5fb41a922903b9962fc0360af37159c4236c810",
            "file": "src/app/shared/molecules/multi-select-dropdown/multi-select-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MultiSelectDropdownComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-multi-select-dropdown",
            "styleUrls": [
                "./multi-select-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-select-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cleanChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "closeChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "openChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectControl",
                    "defaultValue": "new FormControl<any>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onClear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenChange",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "any",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "any",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-multi-select-dropdown',\n  templateUrl: './multi-select-dropdown.component.html',\n  styleUrls: ['./multi-select-dropdown.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MultiSelectDropdownComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MultiSelectDropdownComponent implements ControlValueAccessor {\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() data: any[] = [];\n  @Input() isOpen = false;\n  @Output() selectionChange = new EventEmitter<any>();\n  @Output() openChange = new EventEmitter<void>();\n  @Output() closeChange = new EventEmitter<void>();\n  @Output() cleanChange = new EventEmitter<void>();\n\n  selectControl = new FormControl<any>([]);\n\n  private onChange: (value: any) => void = () => {};\n  private onTouched: () => void = () => {};\n\n  constructor() {\n    this.selectControl.valueChanges.subscribe(value => {\n      if (value) {\n        this.selectionChange.emit(value);\n      }\n    });\n  }\n\n  onOpenChange(isOpen: any): void {\n    if (isOpen) {\n      this.openChange.emit();\n    } else {\n      this.closeChange.emit();\n    }\n  }\n\n  onClear(): void {\n    this.selectControl.setValue([]);\n    this.cleanChange.emit();\n  }\n\n  writeValue(value: any): void {\n    // Update the component with the new value\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Handle the disabled state\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n\n.multiselect-dropdown-wrapper {\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  .dropdown-label {\n    padding-bottom: 6px;\n    font-size: 14px;\n    color: $primary-text-color;\n  }\n\n  &.is-dropdown-open {\n    ::ng-deep {\n      .mat-form-field {\n        width: 100%;\n\n        .mat-form-field-flex {\n          background-color: $white !important;\n        }\n      }\n    }\n  }\n\n\n\n  ::ng-deep {\n    .mat-form-field-flex {\n      background-color: $input-background !important;\n    }\n\n    .mat-select-value {\n      color: $primary-text-color;\n    }\n\n    .mat-select-value-text {\n      color: $primary-text-color;\n    }\n\n    .mat-select-arrow {\n      color: $primary-text-color;\n    }\n  }\n}\n\n// Dropdown panel styles\n::ng-deep {\n  .mat-select-panel {\n    border-radius: 6px !important;\n    margin-top: 4px;\n    background: $white;\n\n    .mat-option {\n      height: 42px;\n      line-height: 42px;\n      font-size: 14px;\n      color: $primary-text-color;\n      padding: 0 12px;\n\n      .mat-option-text {\n        padding: 0;\n      }\n\n      &.mat-selected:not(.mat-option-multiple) {\n        background-color: rgba($primary-text-color, 0.1);\n      }\n\n      &:hover:not(.mat-option-disabled) {\n        background-color: rgba($primary-text-color, 0.1);\n      }\n    }\n  }\n} ",
                    "styleUrl": "./multi-select-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<div class=\"multiselect-dropdown-wrapper\">\n  <div class=\"dropdown-label\">\n    <span>{{label}}</span>\n  </div>\n  <mat-form-field appearance=\"outline\" class=\"dropdown-field\">\n    <mat-select [formControl]=\"selectControl\"\n                [placeholder]=\"placeholder\"\n                multiple\n                (openedChange)=\"onOpenChange($event)\">\n      <mat-select-trigger>\n        {{(selectControl.value?.length || 0) ? ((selectControl.value?.length || 0) + ' Selected') : placeholder}}\n      </mat-select-trigger>\n      <mat-option *ngFor=\"let item of data\" [value]=\"item.value\">\n        {{item.label}}\n      </mat-option>\n    </mat-select>\n    <button matSuffix mat-icon-button \n            *ngIf=\"selectControl.value?.length\"\n            (click)=\"onClear(); $event.stopPropagation()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n</div> "
        },
        {
            "name": "PokemonCardComponent",
            "id": "component-PokemonCardComponent-0a70f7c9cb05dcf186e2cd82062a062eb3e3511ae7687ef9dc1568667084f3bee694f8c5f3d3acd66af5f763b11011ca47fa921ad8af8377b10be1495aa8a76e",
            "file": "src/app/shared/molecules/pokemon-card/pokemon-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pokemon-card",
            "styleUrls": [
                "./pokemon-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pokemon-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Pokemon",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cardClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCardBackground",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getImageUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemonNumber",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Pokemon } from '../../../core/models/pokemon.types';\nimport { getBackground } from '../../../core/constants/pokemon-types';\n\n@Component({\n  selector: 'app-pokemon-card',\n  templateUrl: './pokemon-card.component.html',\n  styleUrls: ['./pokemon-card.component.scss']\n})\nexport class PokemonCardComponent {\n  @Input() data!: Pokemon;\n  @Output() cardClick = new EventEmitter<void>();\n\n  getCardBackground(): any {\n    return getBackground(this.data.types);\n  }\n\n  getPokemonNumber(id: any): any {\n    let result = id.toString();\n    if (id < 10) result = `00${id}`;\n    else if (id < 100) result = `0${id}`;\n    return result;\n  }\n\n  getImageUrl(): string {\n    return this.data.sprites.other?.['official-artwork']?.front_default ||\n           this.data.sprites.other?.dream_world?.front_default ||\n           this.data.sprites.front_default ||\n           'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/0.png';\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'variables' as *;\n@use 'common' as *;\n\n.pokemon-card {\n  position: relative;\n  border-radius: 12px;\n  padding: 16px;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n//   height: 100%;\n  min-height: 250px;\n  @include flex-col(flex-start, space-between);\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  .pokemon-number {\n    color: rgba(0, 0, 0, 0.5);\n    font-weight: bold;\n    font-size: 1.2rem;\n    align-self: flex-end;\n  }\n\n  .pokemon-image {\n    width: 100%;\n    height: 150px;\n    @include flex-row(center, center);\n    margin: 10px 0;\n\n    img {\n      width: 140px;\n      height: 140px;\n      object-fit: contain;\n    }\n  }\n\n  .pokemon-name {\n    color: $primary-text-color;\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin: 10px 0;\n    text-align: center;\n  }\n\n  .pokemon-types {\n    @include flex-row(center, center);\n    gap: 8px;\n    margin-top: auto;\n\n    .type {\n      background-color: rgba(255, 255, 255, 0.2);\n      padding: 4px 12px;\n      border-radius: 20px;\n      color: $primary-text-color;\n      font-size: 0.9rem;\n    }\n  }\n} ",
                    "styleUrl": "./pokemon-card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"pokemon-card\" [style.background]=\"getCardBackground()\" (click)=\"cardClick.emit()\">\n  <div class=\"pokemon-number\">#{{getPokemonNumber(data.id)}}</div>\n  <div class=\"pokemon-image\">\n    <img [src]=\"getImageUrl()\" [alt]=\"data.name\">\n  </div>\n  <div class=\"pokemon-name\">{{data.name | titlecase}}</div>\n  <div class=\"pokemon-types\">\n    <span class=\"type\" *ngFor=\"let type of data.types\">\n      {{type.type.name | titlecase}}\n    </span>\n  </div>\n</div> "
        },
        {
            "name": "PokemonDetailsComponent",
            "id": "component-PokemonDetailsComponent-e9573e8bccc1483e694a8488e6f675a0731648a86e17f344a8d34de93af4339c382069284d30ddb8180171296e495b2e73f923508749d9c44550aba6685767f6",
            "file": "src/app/shared/pages/pokemon-details/pokemon-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pokemon-details",
            "styleUrls": [
                "./pokemon-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pokemon-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentId",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "evolutionChain$",
                    "defaultValue": "of([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "pokemon$",
                    "defaultValue": "of()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Pokemon>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "species$",
                    "defaultValue": "of()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "loadPokemonData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNextPokemon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPreviousPokemon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, tap, takeUntil, finalize } from 'rxjs/operators';\nimport { PokemonService } from '../../../core/services/pokemon.service';\nimport { Pokemon, PokemonSpecies } from '../../../core/models/pokemon.types';\n\n\n@Component({\n  selector: 'app-pokemon-details',\n  templateUrl: './pokemon-details.component.html',\n  styleUrls: ['./pokemon-details.component.scss']\n})\nexport class PokemonDetailsComponent implements OnInit, OnDestroy {\n  pokemon$: Observable<Pokemon> = of();\n  species$: any = of();\n  evolutionChain$: any = of([]);\n  isLoading = true;\n  currentId = 1;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private pokemonService: PokemonService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(params => {\n      this.currentId = +params['id'];\n      this.loadPokemonData();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadPokemonData(): void {\n    this.isLoading = true;\n\n    this.pokemon$ = this.pokemonService.getPokemonDataById(this.currentId).pipe(\n      tap(() => {\n        this.isLoading = false;\n      }),\n      takeUntil(this.destroy$)\n    );\n\n    this.species$ = this.pokemon$.pipe(\n      switchMap(pokemon => this.pokemonService.getSpeciesDataById(pokemon.id)),\n      takeUntil(this.destroy$)\n    );\n\n    this.evolutionChain$ = this.species$.pipe(\n      switchMap((species:any) => this.pokemonService.getPokemonEvolutionChain(species)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  onPreviousPokemon(): void {\n    if (this.currentId > 1) {\n      this.router.navigate(['/details', this.currentId - 1]);\n    }\n  }\n\n  onNextPokemon(): void {\n    this.router.navigate(['/details', this.currentId + 1]);\n  }\n\n  onClose(): void {\n    this.router.navigate(['/']);\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'variables' as *;\n@use 'common' as *;\n\n.details-container {\n  background-color: $bg-color !important;\n  padding: 41px;\n  max-width: 710px;\n  margin: 0 auto;\n  \n  @include sm {\n    padding: 12px;\n  }\n}\n\n.details-content {\n  padding-top: 38px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  .left-section, .right-section {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n\n    > * {\n      background-color: $white;\n      border-radius: 12px;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      padding: 24px;\n    }\n  }\n}\n\n.details-modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: $bg-color !important;\n  overflow-y: auto;\n  z-index: 1000;\n\n  .modal-content {\n    background-color: $bg-color !important;\n    padding: 41px;\n    max-width: 710px;\n    margin: 0 auto;\n    \n    @include sm {\n      padding: 12px;\n    }\n  }\n}\n\n.padding-components {\n  padding-top: 38px;\n} ",
                    "styleUrl": "./pokemon-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pokemonService",
                        "type": "PokemonService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"details-container\">\n  <ng-container *ngIf=\"(pokemon$ | async) as pokemon; else loader\">\n    <app-details-header \n      [pokemon]=\"pokemon\"\n      [speciesData]=\"species$ | async\"\n      (backClick)=\"onPreviousPokemon()\"\n      (closeClick)=\"onClose()\"\n      (forwardClick)=\"onNextPokemon()\">\n    </app-details-header>\n    \n    <div class=\"details-content\">\n      <div class=\"left-section\">\n        <app-property-card [pokemon]=\"pokemon\" [speciesData]=\"species$ | async\"></app-property-card>\n        <app-stat-card [stats]=\"pokemon.stats\"></app-stat-card>\n      </div>\n      \n      <div class=\"right-section\">\n        <ng-container *ngIf=\"evolutionChain$ | async as evolutionChain\">\n          <app-evolution-chain-card \n            [evolutionChain]=\"evolutionChain\">\n          </app-evolution-chain-card>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #loader>\n  <div class=\"loader-container\">\n    <app-loader></app-loader>\n  </div>\n</ng-template> "
        },
        {
            "name": "PropertyCardComponent",
            "id": "component-PropertyCardComponent-ccc8c8c08d56728ee5202623ebc94e4adc4752acd77e2aa692fe3e8455f6a371c4734bfc86e03ea04d023854c35e5fe6b2f664d42a5816d3622f0df968242dc6",
            "file": "src/app/shared/molecules/property-card/property-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-property-card",
            "styleUrls": [
                "./property-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./property-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pokemon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "pokemonTypeData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "speciesData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getCamleCaseString",
                    "defaultValue": "getCamleCaseString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getAbilities",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getBaseHappiness",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getBaseStats",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCaptureRate",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getEggGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getGrowthRate",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMoves",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { getCamleCaseString } from '../../../core/constants/pokemon-types';\n\n@Component({\n  selector: 'app-property-card',\n  templateUrl: './property-card.component.html',\n  styleUrls: ['./property-card.component.scss']\n})\nexport class PropertyCardComponent {\n  @Input() pokemon!: any;\n  @Input() speciesData: any;\n  @Input() pokemonTypeData: any;\n\n  getCamleCaseString = getCamleCaseString;\n\n  getBaseStats(): any {\n    return this.pokemon?.stats\n      .map((stat: any) => `${this.getCamleCaseString(stat.stat.name)}: ${stat.base_stat}`)\n      .join(', ');\n  }\n\n  getMoves(): any {\n    return this.pokemon?.moves\n      .slice(0, 5) // Limit to first 5 moves for brevity\n      .map((move: any) => this.getCamleCaseString(move.move.name))\n      .join(', ');\n  }\n\n  getAbilities(): any {\n    return this.pokemon?.abilities\n      .map((item: any) => this.getCamleCaseString(item.ability.name))\n      .join(', ');\n  }\n\n  getBaseHappiness(): number {\n    return this.speciesData?.base_happiness || 0;\n  }\n\n  getCaptureRate(): number {\n    return this.speciesData?.capture_rate || 0;\n  }\n\n  getEggGroups(): string {\n    return this.speciesData?.egg_groups\n      .map((group: any) => this.getCamleCaseString(group.name))\n      .join(', ') || 'Unknown';\n  }\n\n  getGrowthRate(): string {\n    return this.speciesData?.growth_rate?.name\n      ? this.getCamleCaseString(this.speciesData.growth_rate.name)\n      : 'Unknown';\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n@use \"src/styles/common\" as *;\n\n.property-container {\n  padding: 18px 0;\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 20px;\n\n    @include sm {\n      grid-template-columns: 1fr;\n    }\n  }\n\n  .property-item {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    border-radius: 8px;\n    padding: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n    &.full-width {\n      grid-column: 1 / -1;\n    }\n  }\n\n  .prop-header {\n    font-size: 16px;\n    font-weight: bold;\n    color: $primary-text-color;\n    padding: 5px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n\n  .prop-header-data {\n    font-size: 16px;\n    padding: 5px 0 5px 5px;\n    // color: $secondary-text-color;\n  }\n\n  .type-wrap {\n    @include flex-row(flex-start, flex-start);\n    flex-wrap: wrap;\n    gap: 8px;\n  }\n}\n\n.property-card {\n  background: white;\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n  .properties-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 2rem;\n\n    @include sm {\n      grid-template-columns: 1fr;\n    }\n\n    .property-item {\n      @include flex-col(flex-start, flex-start);\n      gap: 0.5rem;\n\n      .label {\n        color: #666;\n        font-size: 0.9rem;\n      }\n\n      .value {\n        font-size: 1.1rem;\n        font-weight: 500;\n        color: $primary-text-color;\n      }\n    }\n  }\n} ",
                    "styleUrl": "./property-card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"property-container\">\n  <div class=\"grid-container\">\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Height</div>\n      <div class=\"prop-header-data\">{{pokemon.height}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Weight</div>\n      <div class=\"prop-header-data\">{{pokemon.weight / 10}} Kg</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Abilities</div>\n      <div class=\"prop-header-data\">{{getAbilities()}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Moves</div>\n      <div class=\"prop-header-data\">{{getMoves()}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Base Happiness</div>\n      <div class=\"prop-header-data\">{{getBaseHappiness()}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Capture Rate</div>\n      <div class=\"prop-header-data\">{{getCaptureRate()}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Egg Groups</div>\n      <div class=\"prop-header-data\">{{getEggGroups()}}</div>\n    </div>\n\n    <div class=\"property-item\">\n      <div class=\"prop-header\">Growth Rate</div>\n      <div class=\"prop-header-data\">{{getGrowthRate()}}</div>\n    </div>\n\n</div> "
        },
        {
            "name": "SearchFilterComponent",
            "id": "component-SearchFilterComponent-f96abb4093e709241908deb30a50498833d570b6555cbea665e8c4e45674bfedc23819292a06a63b446034cd835c63600fd89744879b78582b7459f0d5eeb4ef",
            "file": "src/app/shared/atoms/search-filter/search-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-filter",
            "styleUrls": [
                "./search-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inputClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "searchChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "searchControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search-filter',\n  templateUrl: './search-filter.component.html',\n  styleUrls: ['./search-filter.component.scss']\n})\nexport class SearchFilterComponent {\n  @Input() placeholder = '';\n  @Input() inputClass = '';\n  @Input() label = '';\n  @Output() searchChange = new EventEmitter<any>();\n\n  searchControl = new FormControl('');\n\n  constructor() {\n    this.searchControl.valueChanges.pipe(\n      debounceTime(200),\n      distinctUntilChanged()\n    ).subscribe(value => {\n      this.searchChange.emit(value || '');\n    });\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"src/styles/variables\" as *;\n\n.search-filter-wrapper {\n  mat-form-field {\n    width: 100%;\n  }\n} ",
                    "styleUrl": "./search-filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": [],
            "templateData": "<div class=\"search-filter-wrapper\">\n  <div class=\"filter-label\">\n    <span>{{label}}</span>\n  </div>\n  <mat-form-field [class]=\"inputClass\">\n    <input matInput\n           [placeholder]=\"placeholder\"\n           [formControl]=\"searchControl\">\n  </mat-form-field>\n</div> "
        },
        {
            "name": "StatCardComponent",
            "id": "component-StatCardComponent-66335ec66dca9fe3fc7fd5e70cfc93a2a54fd3984aa95bafcf17d47e2fa950f2a3c3bbd1850f3c28bf4d6561852966071daef380a352c802631980faff2ff79a",
            "file": "src/app/shared/molecules/stat-card/stat-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stat-card",
            "styleUrls": [
                "./stat-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stat-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "stats",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getStatHeading",
                    "args": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { getCamleCaseString } from '../../../core/constants/pokemon-types';\nimport { PokemonStat } from '../../../core/models/pokemon.types';\n\n\n@Component({\n  selector: 'app-stat-card',\n  templateUrl: './stat-card.component.html',\n  styleUrls: ['./stat-card.component.scss']\n})\nexport class StatCardComponent {\n  @Input() stats!: any;\n\n  getStatHeading(name: any): any {\n    if (name === 'hp') {\n      return 'HP';\n    }\n    \n    const [firstName, lastName] = name.split('-');\n    if (firstName === 'special' && lastName) {\n      return 'Sp. ' + getCamleCaseString(lastName);\n    }\n    return getCamleCaseString(firstName);\n  }\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n@use 'common' as *;\n\n.stat-container {\n  .stat-card {\n    background-color: #b1d2d2;\n    border-radius: 8px;\n    padding: 16px;\n  }\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 10px;\n\n    @include sm {\n      grid-template-columns: 1fr;\n    }\n  }\n\n  .stat-item {\n    @include flex-col(flex-start, flex-start);\n    gap: 0.5rem;\n    width: 100%;\n  }\n\n  .stat-label {\n    min-width: 100px;\n  }\n\n  .progress-container {\n    position: relative;\n    width: 100%;\n  }\n\n  progress {\n    border-radius: 7px;\n    width: 222px;\n    height: 14px;\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  .stat-data {\n    position: absolute;\n    top: 3px;\n    left: 10px;\n    color: $white;\n    font-size: 11px;\n  }\n\n  progress::-webkit-progress-bar {\n    background-color: #93B2B2;\n  }\n\n  progress::-webkit-progress-value {\n    background-color: $bg-popover;\n  }\n\n  .stat-flex-rows {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .prop-header {\n    font-size: 16px;\n    color: $bg-popover;\n    padding: 3px;\n  }\n\n  .stat-header {\n    padding-left: 5px;\n    color: $bg-popover;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 20px;\n  }\n\n  .stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 2rem;\n\n    @include sm {\n      grid-template-columns: 1fr;\n    }\n\n    .progress-bar {\n      width: 100%;\n      height: 8px;\n      background: #eee;\n      border-radius: 4px;\n      overflow: hidden;\n\n      .progress {\n        height: 100%;\n        background: #4CAF50;\n        transition: width 0.3s ease;\n      }\n    }\n  }\n} ",
                    "styleUrl": "./stat-card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"stat-container\">\n  <div class=\"stat-card\">\n    <div class=\"stat-header\">Base Stats</div>\n    <div class=\"grid-container\">\n      <div class=\"stat-item\" *ngFor=\"let stat of stats\">\n        <div class=\"stat-label\">{{getStatHeading(stat.stat.name)}}</div>\n        <div class=\"progress-container\">\n          <progress [value]=\"stat.base_stat\" max=\"100\"></progress>\n          <span class=\"stat-value\">{{stat.base_stat}}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5d05b052639029216d390a840644122c88d2e3bcb32d3fad242ec33a6607f02c96939b775c5516892054d1ca1ab03062fccd1604bdfe3de1f605797042adcd22",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatGridListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4eb0f726ac042a20f8c784f307c0520fa83eaaa0fd8e130a02c12b4d1a01543ddfb64a6daffb519751327d2c828c6c5a05b7d03782a2f2cee630dd17596096b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./shared/pages/home/home.module').then(m => m.HomeModule)\",\n    pathMatch: 'full'\n  },\n  {\n    path: 'details',\n    loadChildren: () => \"import('./shared/pages/pokemon-details/pokemon-details.module').then(m => m.PokemonDetailsModule)\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-a0c56d84a18a42a5ec358e19625b513288a49568ffa6df6ae38b689ddb3f48c2dd67ee3b8ce533719edb7abef2e8a09f89d991afe781ada316c0b7aba5271c79",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class CoreModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FilterModule",
            "id": "module-FilterModule-6f05b171be60ecfcf76a1967a09e3b0426811e995572173cb61b1cef5f85ef543ed8de63ddb21b4bd5b3a529063a7185a3f75bc423a1f4c4a4bf73cc13493c47",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/organisms/filter/filter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FilterComponent } from './filter.component';\nimport { SearchFilterComponent } from '../../atoms/search-filter/search-filter.component';\nimport { MultiSelectDropdownComponent } from '../../molecules/multi-select-dropdown/multi-select-dropdown.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    FilterComponent,\n    MultiSelectDropdownComponent,\n    SearchFilterComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  exports: [\n    FilterComponent\n  ]\n})\nexport class FilterModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FilterComponent"
                        },
                        {
                            "name": "MultiSelectDropdownComponent"
                        },
                        {
                            "name": "SearchFilterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FilterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-ef6876fdc9bae11544f29184526ed9118781d08ea88a0816c8081a76a88e9d448ad68f0dfba06b493411e4a19738986ba76760d4a9d431c6b33e291bfa9dcce8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/pages/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SharedModule } from '../../shared.module';\nimport { FilterModule } from '../../organisms/filter/filter.module';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FilterModule,\n    MatButtonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class HomeModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FilterModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PokemonDetailsModule",
            "id": "module-PokemonDetailsModule-9af7d85671b279fe248b9454ec24d6add1fed1c4358ce2874475d6f87b3f9e2acfa4d8fb12702d62850cae1edb69fde3cef3091dff1c7f479909585d37efd994",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/pages/pokemon-details/pokemon-details.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from '../../shared.module';\n\n\nimport { PokemonDetailsComponent } from './pokemon-details.component';\nimport { ColorfulTagComponent } from '../../atoms/colorful-tag/colorful-tag.component';\nimport { EvolutionChainCardComponent } from '../../molecules/evolution-chain-card/evolution-chain-card.component';\nimport { PropertyCardComponent } from '../../molecules/property-card/property-card.component';\nimport { StatCardComponent } from '../../molecules/stat-card/stat-card.component';\nimport { DetailsHeaderComponent } from '../../organisms/details-header/details-header.component';\n\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: PokemonDetailsComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    PokemonDetailsComponent,\n    DetailsHeaderComponent,\n    PropertyCardComponent,\n    StatCardComponent,\n    EvolutionChainCardComponent,\n    ColorfulTagComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatIconModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class PokemonDetailsModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ColorfulTagComponent"
                        },
                        {
                            "name": "DetailsHeaderComponent"
                        },
                        {
                            "name": "EvolutionChainCardComponent"
                        },
                        {
                            "name": "PokemonDetailsComponent"
                        },
                        {
                            "name": "PropertyCardComponent"
                        },
                        {
                            "name": "StatCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-eac8b7cc595c02ff8689ad3f2442e5c1214510cbbb3b4b2f85e378ce78ce49c64dc30b343779b07d1fb7cc8c315720a130512eab73813e268f45b94e81ff5980",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { PokemonCardComponent } from './molecules/pokemon-card/pokemon-card.component';\nimport { HeaderComponent } from './organisms/header/header.component';\nimport { LoaderComponent } from './atoms/loader/loader.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    LoaderComponent,\n    PokemonCardComponent\n  ],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    HeaderComponent,\n    LoaderComponent,\n    PokemonCardComponent\n  ]\n})\nexport class SharedModule { } ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "PokemonCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "PokemonCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "API_URLS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/constants/api-urls.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  baseURL: environment.baseURL,\n  LIMIT: environment.LIMIT,\n  SEARCH_SLICED: environment.SEARCH_SLICED\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  baseURL: 'https://pokeapi.co/api/v2',\n  LIMIT: 12,\n  SEARCH_SLICED: 30\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  baseURL: 'https://pokeapi.co/api/v2',\n  LIMIT: 12,\n  SEARCH_SLICED: 30\n}"
            },
            {
                "name": "POKEMON_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/constants/pokemon-types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Readonly<PokemonTypes>",
                "defaultValue": "{\n  normal: { color: '#A8A878', hex: '#A8A878' },\n  fighting: { color: '#C03028', hex: '#C03028' },\n  flying: { color: '#A890F0', hex: '#A890F0' },\n  poison: { color: '#A040A0', hex: '#A040A0' },\n  ground: { color: '#E0C068', hex: '#E0C068' },\n  rock: { color: '#B8A038', hex: '#B8A038' },\n  bug: { color: '#A8B820', hex: '#A8B820' },\n  ghost: { color: '#705898', hex: '#705898' },\n  steel: { color: '#B8B8D0', hex: '#B8B8D0' },\n  fire: { color: '#F08030', hex: '#F08030' },\n  water: { color: '#6890F0', hex: '#6890F0' },\n  grass: { color: '#78C850', hex: '#78C850' },\n  electric: { color: '#F8D030', hex: '#F8D030' },\n  psychic: { color: '#F85888', hex: '#F85888' },\n  ice: { color: '#98D8D8', hex: '#98D8D8' },\n  dragon: { color: '#7038F8', hex: '#7038F8' },\n  dark: { color: '#705848', hex: '#705848' },\n  fairy: { color: '#EE99AC', hex: '#EE99AC' },\n  unknown: { color: '#68A090', hex: '#68A090' },\n  shadow: { color: '#705898', hex: '#705898' }\n}"
            }
        ],
        "functions": [
            {
                "name": "getBackground",
                "file": "src/app/core/constants/pokemon-types.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "pokemonTypes",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "pokemonTypes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getCamleCaseString",
                "file": "src/app/core/constants/pokemon-types.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getPokcolor",
                "file": "src/app/core/constants/pokemon-types.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getPokemonDescription",
                "file": "src/app/core/constants/pokemon-types.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "data",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "[]"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "data",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "[]",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/constants/api-urls.ts": [
                {
                    "name": "API_URLS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/constants/api-urls.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  baseURL: environment.baseURL,\n  LIMIT: environment.LIMIT,\n  SEARCH_SLICED: environment.SEARCH_SLICED\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  baseURL: 'https://pokeapi.co/api/v2',\n  LIMIT: 12,\n  SEARCH_SLICED: 30\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  baseURL: 'https://pokeapi.co/api/v2',\n  LIMIT: 12,\n  SEARCH_SLICED: 30\n}"
                }
            ],
            "src/app/core/constants/pokemon-types.ts": [
                {
                    "name": "POKEMON_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/constants/pokemon-types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Readonly<PokemonTypes>",
                    "defaultValue": "{\n  normal: { color: '#A8A878', hex: '#A8A878' },\n  fighting: { color: '#C03028', hex: '#C03028' },\n  flying: { color: '#A890F0', hex: '#A890F0' },\n  poison: { color: '#A040A0', hex: '#A040A0' },\n  ground: { color: '#E0C068', hex: '#E0C068' },\n  rock: { color: '#B8A038', hex: '#B8A038' },\n  bug: { color: '#A8B820', hex: '#A8B820' },\n  ghost: { color: '#705898', hex: '#705898' },\n  steel: { color: '#B8B8D0', hex: '#B8B8D0' },\n  fire: { color: '#F08030', hex: '#F08030' },\n  water: { color: '#6890F0', hex: '#6890F0' },\n  grass: { color: '#78C850', hex: '#78C850' },\n  electric: { color: '#F8D030', hex: '#F8D030' },\n  psychic: { color: '#F85888', hex: '#F85888' },\n  ice: { color: '#98D8D8', hex: '#98D8D8' },\n  dragon: { color: '#7038F8', hex: '#7038F8' },\n  dark: { color: '#705848', hex: '#705848' },\n  fairy: { color: '#EE99AC', hex: '#EE99AC' },\n  unknown: { color: '#68A090', hex: '#68A090' },\n  shadow: { color: '#705898', hex: '#705898' }\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/constants/pokemon-types.ts": [
                {
                    "name": "getBackground",
                    "file": "src/app/core/constants/pokemon-types.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "pokemonTypes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "pokemonTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCamleCaseString",
                    "file": "src/app/core/constants/pokemon-types.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokcolor",
                    "file": "src/app/core/constants/pokemon-types.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPokemonDescription",
                    "file": "src/app/core/constants/pokemon-types.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./shared/pages/home/home.module#HomeModule",
                        "pathMatch": "full",
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "HomeModule"
                            }
                        ]
                    },
                    {
                        "path": "details",
                        "loadChildren": "./shared/pages/pokemon-details/pokemon-details.module#PokemonDetailsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "PokemonDetailsModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/api-urls.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_URLS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonTypeColor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonTypeInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCamleCaseString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getPokcolor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getPokemonDescription",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/constants/pokemon-types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "POKEMON_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EvolutionChain",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Pokemon",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonAbility",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonSpecies",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonStat",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/pokemon.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonType",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/pokemon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PokemonService",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/colorful-tag/colorful-tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorfulTagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/search-filter/search-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/evolution-chain-card/evolution-chain-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EvolutionChainCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/multi-select-dropdown/multi-select-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/pokemon-card/pokemon-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/property-card/property-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PropertyCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/stat-card/stat-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/organisms/details-header/details-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/organisms/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/organisms/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pages/pokemon-details/pokemon-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokemonDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}